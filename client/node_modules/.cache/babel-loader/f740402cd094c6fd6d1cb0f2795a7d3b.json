{"ast":null,"code":"import { buscar, buscarPorNombre, buscarNombrePorId, dataBase, obtenerGeneros, gameByGenre, gameByRating, alphabeticalOrder } from './actions';\nconst initialStore = {\n  fullGames: [],\n  videoGames: [],\n  name: [],\n  id: [],\n  database: [],\n  genres: [],\n  platforms: [],\n  gamesFilterByGenre: [],\n  gamesFilterByRating: [],\n  order: []\n};\n\nconst reducer = (state = initialStore, action) => {\n  switch (action.type) {\n    case buscar:\n      return { ...state,\n        videoGames: action.payload.filter((e, i) => {\n          if (i <= 15) {\n            return e;\n          }\n        }),\n        fullGames: action.payload\n      };\n\n    case buscarPorNombre:\n      return { ...state,\n        name: action.payload\n      };\n\n    case buscarNombrePorId:\n      return { ...state,\n        id: [action.payload]\n      };\n\n    case dataBase:\n      return { ...state,\n        database: action.payload\n      };\n\n    case obtenerGeneros:\n      return { ...state,\n        genres: action.payload\n      };\n\n    case gameByGenre:\n      return { ...state,\n        gamesFilterByGenre: action.payload.filter(e => {\n          for (let i = 0; i < e.genres.length; i++) {\n            if (e.genres[i].name === action.name) {\n              return e;\n            }\n          }\n        })\n      };\n\n    case gameByRating:\n      return { ...state,\n        gamesFilterByRating: action.descAsc === 'desc' ? action.payload.sort((a, b) => {\n          if (a.rating > b.rating) {\n            return -1;\n          } else {\n            return 1;\n          }\n\n          ;\n        }) : action.payload.sort((a, b) => {\n          if (a.rating < b.rating) return -1;else if (a.rating > b.rating) 1;else return;\n        })\n      };\n\n    case alphabeticalOrder:\n      return { ...state,\n        order: action.descAsc === 'Z - A' ? action.payload.sort((a, b) => {\n          if (a.name > b.name) return -1;else if (a.name < b.name) 1;else return;\n        }) : action.payload.sort((a, b) => {\n          if (a.name < b.name) return -1;else if (a.name > b.name) 1;else return;\n        })\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/ayelenalvarez/Desktop/PIVideoGames/client/src/redux/reducer.js"],"names":["buscar","buscarPorNombre","buscarNombrePorId","dataBase","obtenerGeneros","gameByGenre","gameByRating","alphabeticalOrder","initialStore","fullGames","videoGames","name","id","database","genres","platforms","gamesFilterByGenre","gamesFilterByRating","order","reducer","state","action","type","payload","filter","e","i","length","descAsc","sort","a","b","rating"],"mappings":"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","sourcesContent":["import { buscar, buscarPorNombre, buscarNombrePorId, dataBase, obtenerGeneros, gameByGenre, gameByRating, alphabeticalOrder } from './actions'\n\nconst initialStore = {\n    fullGames: [],\n    videoGames: [],\n    name: [],\n    id: [],\n    database: [],\n    genres: [],\n    platforms: [],\n    gamesFilterByGenre: [],\n    gamesFilterByRating: [],\n    order: [],\n}\n\nconst reducer = (state=initialStore, action) => {\n    switch (action.type){\n\n        case buscar: return {\n            ...state,\n            videoGames: action.payload.filter((e, i) => {\n                if(i <= 15){\n                    return e\n                }\n            }),\n            fullGames: action.payload\n        }\n\n        case buscarPorNombre: return {\n            ...state,\n            name: action.payload\n        }\n\n        case buscarNombrePorId: return {\n            ...state,\n            id: [action.payload]\n        }\n\n        case dataBase: return {\n            ...state,\n            database: action.payload\n        }\n\n        case obtenerGeneros: return {\n            ...state,\n            genres: action.payload\n        }\n\n\n         case gameByGenre: return {\n             ...state,\n             gamesFilterByGenre: action.payload.filter((e) => {\n\n                 for(let i = 0; i < e.genres.length; i++){\n                     if(e.genres[i].name === action.name){\n                         return e\n                     }\n                 }\n             })\n         }\n\n         case gameByRating: return {\n             ...state,\n             gamesFilterByRating: action.descAsc === 'desc' ? \n             action.payload.sort((a, b)=>{\n                 if(a.rating > b.rating) {return -1}\n                 else  {return 1};\n                \n             })\n             : action.payload.sort((a, b)=>{\n                 if(a.rating < b.rating) return -1;\n                 else if (a.rating > b.rating) 1;\n                 else return\n             })\n         }\n\n         case alphabeticalOrder: return {\n             ...state,\n             order: action.descAsc === 'Z - A' ?\n             action.payload.sort((a, b)=>{\n                 if(a.name > b.name) return -1;\n                 else if (a.name < b.name) 1;\n                 else return\n             })\n             : action.payload.sort((a, b)=>{\n                 if(a.name < b.name) return -1;\n                 else if (a.name > b.name) 1;\n                 else return\n             })\n         }\n\n        default: return state;\n    }\n}\n\nexport default reducer"]},"metadata":{},"sourceType":"module"}
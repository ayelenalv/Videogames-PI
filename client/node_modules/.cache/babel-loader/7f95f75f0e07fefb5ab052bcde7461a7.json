{"ast":null,"code":"import axios from 'axios';\nexport const buscar = \"BUSCAR_LOS_JUEGOS\";\nexport const buscarPorNombre = \"BUSCAR_POR_NOMBRE\";\nexport const buscarNombrePorId = \"BUSCAR_NOMBRE_POR_ID\";\nexport const dataBase = \"JUEGOS_DE_LA_BASE_DE_DATOS\";\nexport const obtenerGeneros = \"OBTENER_LOS_GENEROS_DE_LA_BASE_DE_DATOS\"; // export const obtenerPlataformas = \"OBTENER_LAS_PLATAFORMAS_DE_LA_BASE_DE_DATOS\";\n\nexport const gameByGenre = \"OBTENER_JUEGOS_SOLO_POR_EN_GENERO\";\nexport const gameByRating = \"OBTENER_LOS_JUEGOS_POR_RATING\";\nexport const alphabeticalOrder = \"OBTENER_LOS_JUEGOS_EN_ORDEN_ALFABETICOS\";\nexport const postSubmit = \"CREAR_JUEGOS\";\nexport function searchGames() {\n  return function (dispatch) {\n    fetch('http://localhost:3001/videogames').then(r => r.json()).then(data => {\n      return dispatch({\n        type: buscar,\n        payload: data\n      });\n    });\n  };\n}\nexport function searchByName(name) {\n  return async function (dispatch) {\n    if (name !== '') {\n      let gamesNames = await axios.get(`/videogames?name=${name}`);\n      return dispatch({\n        type: buscarPorNombre,\n        payload: gamesNames.data\n      });\n    }\n\n    return dispatch({\n      type: buscarPorNombre,\n      payload: []\n    });\n  };\n}\nexport function gameById(id) {\n  return async function (dispatch) {\n    let gamesId = await axios.get(`/videogames/${id}`);\n    return dispatch({\n      type: buscarNombrePorId,\n      payload: gamesId.data\n    });\n  };\n}\nexport function gamesDatabase(arg) {\n  return async function (dispatch) {\n    let database = await axios.get('/database');\n    return dispatch({\n      type: dataBase,\n      payload: database.data,\n      arg: arg\n    });\n  };\n}\nexport function getGenres() {\n  return async function (dispatch) {\n    let genres = await axios.get('/genres');\n    return dispatch({\n      type: obtenerGeneros,\n      payload: genres.data\n    });\n  };\n} // export function getPlatforms(){\n//     return async function(dispatch){\n//         let platforms = await axios.get('http://localhost:3001/api/platforms')\n//         return dispatch({\n//             type: obtenerPlataformas,\n//             payload: platforms.data\n//         })\n//     }\n// }\n\nexport function buscarPorGenero(name) {\n  return async function (dispatch) {\n    let games = await axios.get('/videogames');\n    return dispatch({\n      type: gameByGenre,\n      payload: games.data,\n      name: name\n    });\n  };\n}\nexport function buscarPorRating(descAsc) {\n  return async function (dispatch) {\n    let games = await axios.get('/videogames');\n    return dispatch({\n      type: gameByRating,\n      payload: games.data,\n      descAsc: descAsc\n    });\n  };\n}\nexport function ordenAlfabetico(descAsc) {\n  return async function (dispatch) {\n    let games = await axios.get('/videogames');\n    return dispatch({\n      type: alphabeticalOrder,\n      payload: games.data,\n      descAsc: descAsc\n    });\n  };\n}\nexport function submitPost(datos) {\n  return async function () {\n    let postgame = await axios.post('http://localhost:3001/videogames', datos);\n    console.log(postgame.data);\n    return {\n      type: postSubmit,\n      postgame: postgame.data\n    };\n  };\n}","map":{"version":3,"sources":["/Users/ayelenalvarez/Desktop/PIVideoGames/client/src/redux/actions.js"],"names":["axios","buscar","buscarPorNombre","buscarNombrePorId","dataBase","obtenerGeneros","gameByGenre","gameByRating","alphabeticalOrder","postSubmit","searchGames","dispatch","fetch","then","r","json","data","type","payload","searchByName","name","gamesNames","get","gameById","id","gamesId","gamesDatabase","arg","database","getGenres","genres","buscarPorGenero","games","buscarPorRating","descAsc","ordenAlfabetico","submitPost","datos","postgame","post","console","log"],"mappings":"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","sourcesContent":["import axios from 'axios';\n\nexport const buscar = \"BUSCAR_LOS_JUEGOS\";\nexport const buscarPorNombre = \"BUSCAR_POR_NOMBRE\";\nexport const buscarNombrePorId = \"BUSCAR_NOMBRE_POR_ID\";\nexport const dataBase = \"JUEGOS_DE_LA_BASE_DE_DATOS\";\nexport const obtenerGeneros = \"OBTENER_LOS_GENEROS_DE_LA_BASE_DE_DATOS\";\n// export const obtenerPlataformas = \"OBTENER_LAS_PLATAFORMAS_DE_LA_BASE_DE_DATOS\";\nexport const gameByGenre = \"OBTENER_JUEGOS_SOLO_POR_EN_GENERO\";\nexport const gameByRating = \"OBTENER_LOS_JUEGOS_POR_RATING\";\nexport const alphabeticalOrder = \"OBTENER_LOS_JUEGOS_EN_ORDEN_ALFABETICOS\";\nexport const postSubmit = \"CREAR_JUEGOS\"\n\nexport function searchGames(){\n       return function(dispatch){\n        fetch('http://localhost:3001/videogames')\n        .then(r =>r.json())\n        .then (data=> {\n            return dispatch({\n                type: buscar,\n                payload: data\n        })\n\n        })\n    }\n}\n\nexport function searchByName(name){\n    return async function(dispatch){\n        if(name !== ''){\n            let gamesNames = await axios.get(`/videogames?name=${name}`)\n            return dispatch({\n                type: buscarPorNombre,\n                payload: gamesNames.data\n            })\n        }\n        return dispatch({\n            type: buscarPorNombre,\n            payload: []\n        })\n    }\n}\n\nexport function gameById(id){\n    return async function(dispatch){\n        let gamesId = await axios.get(`/videogames/${id}`)\n        return dispatch({\n            type: buscarNombrePorId,\n            payload: gamesId.data\n        })\n    }\n}\n\nexport function gamesDatabase(arg){\n    return async function(dispatch){\n        let database = await axios.get('/database')\n        return dispatch({\n            type: dataBase,\n            payload: database.data,\n            arg: arg\n        })\n    }\n}\n\nexport function getGenres(){\n    return async function(dispatch){\n        let genres = await axios.get('/genres')\n        return dispatch({\n            type: obtenerGeneros,\n            payload: genres.data\n        })\n    }\n}\n\n// export function getPlatforms(){\n//     return async function(dispatch){\n//         let platforms = await axios.get('http://localhost:3001/api/platforms')\n//         return dispatch({\n//             type: obtenerPlataformas,\n//             payload: platforms.data\n//         })\n//     }\n// }\n\nexport function buscarPorGenero(name){\n    return async function(dispatch){\n        let games = await axios.get('/videogames')\n        return dispatch({\n            type: gameByGenre,\n            payload: games.data,\n            name: name\n        })\n    }\n}\n\nexport function buscarPorRating(descAsc){\n    return async function(dispatch){\n        let games = await axios.get('/videogames')\n        return dispatch({\n            type: gameByRating,\n            payload: games.data,\n            descAsc: descAsc\n        })\n    }\n}\n\nexport function ordenAlfabetico(descAsc){\n    return async function(dispatch){\n        let games = await axios.get('/videogames')\n        return dispatch({\n            type: alphabeticalOrder,\n            payload: games.data,\n            descAsc: descAsc\n        })\n    }\n}\nexport function submitPost(datos){\n    return async function(){\n        let postgame = await axios.post('http://localhost:3001/videogames', datos)\n        console.log(postgame.data)\n        return {\n            type: postSubmit,\n            postgame: postgame.data\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { buscar, buscarPorNombre, buscarNombrePorId, dataBase, obtenerGeneros, obtenerPlataformas, gameByGenre, gameByRating, alphabeticalOrder } from './actions';\nconst initialStore = {\n  fullGames: [],\n  videoGames: [],\n  name: [],\n  id: [],\n  database: [],\n  genres: [],\n  platforms: [],\n  gamesFilterByGenre: [],\n  gamesFilterByRating: [],\n  order: []\n};\n\nconst reducer = (state = initialStore, action) => {\n  switch (action.type) {\n    case buscar:\n      return { ...state,\n        videoGames: action.payload.filter((e, i) => {\n          if (i <= 15) {\n            return e;\n          }\n        }),\n        fullGames: action.payload\n      };\n\n    case buscarPorNombre:\n      return { ...state,\n        name: action.payload\n      };\n\n    case buscarNombrePorId:\n      return { ...state,\n        id: [action.payload]\n      };\n\n    case dataBase:\n      return { ...state,\n        database: action.payload\n      };\n\n    case obtenerGeneros:\n      return { ...state,\n        genres: action.payload\n      };\n\n    case obtenerPlataformas:\n      return { ...state,\n        platforms: action.payload\n      };\n    // case gameByGenre: return {\n    //     ...state,\n    //     gamesFilterByGenre: action.payload.filter((e) => {\n    //         for(let i = 0; i < e.genres.length; i++){\n    //             if(e.genres[i].name === action.name){\n    //                 return e\n    //             }\n    //         }\n    //     })\n    // }\n    // case gameByRating: return {\n    //     ...state,\n    //     gamesFilterByRating: action.descAsc === 'desc' ? \n    //     action.payload.sort((a, b)=>{\n    //         if(a.rating > b.rating) return -1;\n    //         else if (a.rating < b.rating) 1;\n    //         else return\n    //     })\n    //     : action.payload.sort((a, b)=>{\n    //         if(a.rating < b.rating) return -1;\n    //         else if (a.rating > b.rating) 1;\n    //         else return\n    //     })\n    // }\n    // case alphabeticalOrder: return {\n    //     ...state,\n    //     order: action.descAsc === 'Z - A' ?\n    //     action.payload.sort((a, b)=>{\n    //         if(a.name > b.name) return -1;\n    //         else if (a.name < b.name) 1;\n    //         else return\n    //     })\n    //     : action.payload.sort((a, b)=>{\n    //         if(a.name < b.name) return -1;\n    //         else if (a.name > b.name) 1;\n    //         else return\n    //     })\n    // }\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/ayelenalvarez/Desktop/PIVideoGames/client/src/redux/reducer.js"],"names":["buscar","buscarPorNombre","buscarNombrePorId","dataBase","obtenerGeneros","obtenerPlataformas","gameByGenre","gameByRating","alphabeticalOrder","initialStore","fullGames","videoGames","name","id","database","genres","platforms","gamesFilterByGenre","gamesFilterByRating","order","reducer","state","action","type","payload","filter","e","i"],"mappings":"AAAA,SAASA,MAAT,EAAiBC,eAAjB,EAAkCC,iBAAlC,EAAqDC,QAArD,EAA+DC,cAA/D,EAA+EC,kBAA/E,EAAmGC,WAAnG,EAAgHC,YAAhH,EAA8HC,iBAA9H,QAAuJ,WAAvJ;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,SAAS,EAAE,EADM;AAEjBC,EAAAA,UAAU,EAAE,EAFK;AAGjBC,EAAAA,IAAI,EAAE,EAHW;AAIjBC,EAAAA,EAAE,EAAE,EAJa;AAKjBC,EAAAA,QAAQ,EAAE,EALO;AAMjBC,EAAAA,MAAM,EAAE,EANS;AAOjBC,EAAAA,SAAS,EAAE,EAPM;AAQjBC,EAAAA,kBAAkB,EAAE,EARH;AASjBC,EAAAA,mBAAmB,EAAE,EATJ;AAUjBC,EAAAA,KAAK,EAAE;AAVU,CAArB;;AAaA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAACZ,YAAP,EAAqBa,MAArB,KAAgC;AAC5C,UAAQA,MAAM,CAACC,IAAf;AAEI,SAAKvB,MAAL;AAAa,aAAO,EAChB,GAAGqB,KADa;AAEhBV,QAAAA,UAAU,EAAEW,MAAM,CAACE,OAAP,CAAeC,MAAf,CAAsB,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACxC,cAAGA,CAAC,IAAI,EAAR,EAAW;AACP,mBAAOD,CAAP;AACH;AACJ,SAJW,CAFI;AAOhBhB,QAAAA,SAAS,EAAEY,MAAM,CAACE;AAPF,OAAP;;AAUb,SAAKvB,eAAL;AAAsB,aAAO,EACzB,GAAGoB,KADsB;AAEzBT,QAAAA,IAAI,EAAEU,MAAM,CAACE;AAFY,OAAP;;AAKtB,SAAKtB,iBAAL;AAAwB,aAAO,EAC3B,GAAGmB,KADwB;AAE3BR,QAAAA,EAAE,EAAE,CAACS,MAAM,CAACE,OAAR;AAFuB,OAAP;;AAKxB,SAAKrB,QAAL;AAAe,aAAO,EAClB,GAAGkB,KADe;AAElBP,QAAAA,QAAQ,EAAEQ,MAAM,CAACE;AAFC,OAAP;;AAKf,SAAKpB,cAAL;AAAqB,aAAO,EACxB,GAAGiB,KADqB;AAExBN,QAAAA,MAAM,EAAEO,MAAM,CAACE;AAFS,OAAP;;AAKrB,SAAKnB,kBAAL;AAAyB,aAAO,EAC5B,GAAGgB,KADyB;AAE5BL,QAAAA,SAAS,EAAEM,MAAM,CAACE;AAFU,OAAP;AAKzB;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAS,aAAOH,KAAP;AA/Eb;AAiFH,CAlFD;;AAoFA,eAAeD,OAAf","sourcesContent":["import { buscar, buscarPorNombre, buscarNombrePorId, dataBase, obtenerGeneros, obtenerPlataformas, gameByGenre, gameByRating, alphabeticalOrder } from './actions'\n\nconst initialStore = {\n    fullGames: [],\n    videoGames: [],\n    name: [],\n    id: [],\n    database: [],\n    genres: [],\n    platforms: [],\n    gamesFilterByGenre: [],\n    gamesFilterByRating: [],\n    order: [],\n}\n\nconst reducer = (state=initialStore, action) => {\n    switch (action.type){\n\n        case buscar: return {\n            ...state,\n            videoGames: action.payload.filter((e, i) => {\n                if(i <= 15){\n                    return e\n                }\n            }),\n            fullGames: action.payload\n        }\n\n        case buscarPorNombre: return {\n            ...state,\n            name: action.payload\n        }\n\n        case buscarNombrePorId: return {\n            ...state,\n            id: [action.payload]\n        }\n\n        case dataBase: return {\n            ...state,\n            database: action.payload\n        }\n\n        case obtenerGeneros: return {\n            ...state,\n            genres: action.payload\n        }\n\n        case obtenerPlataformas: return {\n            ...state,\n            platforms: action.payload\n        }\n\n        // case gameByGenre: return {\n        //     ...state,\n        //     gamesFilterByGenre: action.payload.filter((e) => {\n\n        //         for(let i = 0; i < e.genres.length; i++){\n        //             if(e.genres[i].name === action.name){\n        //                 return e\n        //             }\n        //         }\n        //     })\n        // }\n\n        // case gameByRating: return {\n        //     ...state,\n        //     gamesFilterByRating: action.descAsc === 'desc' ? \n        //     action.payload.sort((a, b)=>{\n        //         if(a.rating > b.rating) return -1;\n        //         else if (a.rating < b.rating) 1;\n        //         else return\n        //     })\n        //     : action.payload.sort((a, b)=>{\n        //         if(a.rating < b.rating) return -1;\n        //         else if (a.rating > b.rating) 1;\n        //         else return\n        //     })\n        // }\n\n        // case alphabeticalOrder: return {\n        //     ...state,\n        //     order: action.descAsc === 'Z - A' ?\n        //     action.payload.sort((a, b)=>{\n        //         if(a.name > b.name) return -1;\n        //         else if (a.name < b.name) 1;\n        //         else return\n        //     })\n        //     : action.payload.sort((a, b)=>{\n        //         if(a.name < b.name) return -1;\n        //         else if (a.name > b.name) 1;\n        //         else return\n        //     })\n        // }\n\n        default: return state;\n    }\n}\n\nexport default reducer"]},"metadata":{},"sourceType":"module"}
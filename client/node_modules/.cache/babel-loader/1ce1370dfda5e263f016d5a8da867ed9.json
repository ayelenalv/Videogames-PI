{"ast":null,"code":"var _jsxFileName = \"/Users/ayelenalvarez/Desktop/PIVideoGames/client/src/components/Home/home.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { searchGames } from '../../redux/actions';\nimport Card from '../Card/card';\nimport { Link } from 'react-router-dom';\nimport Paginado from '../Paginado/paginado';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n\n  const dispatch = useDispatch();\n  const allVideoGames = useSelector(state => state.videoGames);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [gamesPerPage, setGamesPerPage] = useState(15);\n  const indexOfLastGame = currentPage * gamesPerPage; //15\n\n  const indexOfFirstGame = indexOfLastGame - gamesPerPage;\n  const currentGames = allVideoGames.slice(indexOfFirstGame, indexOfLastGame);\n\n  const paginado = pageNumber => {\n    setCurrentPage(pageNumber);\n  };\n\n  useEffect(() => {\n    dispatch(searchGames());\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Paginado, {\n        gamesPerPage: gamesPerPage,\n        allVideoGames: allVideoGames.length,\n        paginado: paginado\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this), currentGames === null || currentGames === void 0 ? void 0 : currentGames.map(games => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: 'app/home' + games.id,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              name: games.name,\n              img: games.img,\n              genres: games.genres\n            }, games.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n/*export default function Home (){\n    const dispatch = useDispatch();\n    const allVideoGames = useSelector((state) => state.nameGame)\n\n    useEffect(() => {\n        dispatch(searchGames())\n    }, [])\n\n    function handleClick(evt){\n        evt.preventDefault();\n        dispatch(searchGames());\n    }\n\n    return(\n        <div>\n            <Link to = '/videogames'> Crear Videogame </Link>\n            <h1>VOS PODES PIPI</h1>\n            <button onClick={evt => handleClick(evt)}>Refresh</button>\n        \n            <div>\n                <select> \n                    <option value = 'order'>Ordenar</option>\n                    <option value = 'asc'>Ascendente</option>\n                    <option value = 'desc'>Descendente</option> //el value me sirve para hacer la logica\n                </select>\n\n                <select> \n                   <option value='all'>Todos</option>\n                   <option value='created'>Creados</option>\n                   <option value='api'>Existentes</option>\n                </select>\n\n                {\n                    allVideoGames?.map((games, index) => {\n                return(    \n                    <div>\n                        <Card key={index} name={games.name} img={games.img} genres= {games.genres}/>\n                    </div>\n                    )\n                })\n                }\n            </div>\n        </div>\n    )\n} */\n\n_s(Home, \"QRelAswHnE5I7ipgiTi+xj8M4og=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/ayelenalvarez/Desktop/PIVideoGames/client/src/components/Home/home.jsx"],"names":["React","useState","useEffect","useDispatch","useSelector","searchGames","Card","Link","Paginado","Home","dispatch","allVideoGames","state","videoGames","currentPage","setCurrentPage","gamesPerPage","setGamesPerPage","indexOfLastGame","indexOfFirstGame","currentGames","slice","paginado","pageNumber","length","map","games","id","name","img","genres"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAmC,OAAnC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAwC,aAAxC;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,OAAQC,IAAR,MAAmB,cAAnB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,QAAP,MAAqB,sBAArB;;AAEA,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAC3B,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AACA,QAAMQ,aAAa,GAAGP,WAAW,CAAEQ,KAAD,IAAWA,KAAK,CAACC,UAAlB,CAAjC;AAEA,QAAM,CAACC,WAAD,EAAaC,cAAb,IAA+Bd,QAAQ,CAAC,CAAD,CAA7C;AACA,QAAM,CAACe,YAAD,EAAeC,eAAf,IAAkChB,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAMiB,eAAe,GAAGJ,WAAW,GAAGE,YAAtC,CAN2B,CAMyB;;AACpD,QAAMG,gBAAgB,GAAGD,eAAe,GAAGF,YAA3C;AACA,QAAMI,YAAY,GAAGT,aAAa,CAACU,KAAd,CAAoBF,gBAApB,EAAqCD,eAArC,CAArB;;AAEA,QAAMI,QAAQ,GAAIC,UAAD,IAAe;AAC5BR,IAAAA,cAAc,CAACQ,UAAD,CAAd;AACH,GAFD;;AAMArB,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,QAAQ,CAACL,WAAW,EAAZ,CAAR;AACH,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACI;AAAA,2BACI;AAAA,8BACA,QAAC,QAAD;AACI,QAAA,YAAY,EAAIW,YADpB;AAEI,QAAA,aAAa,EAAIL,aAAa,CAACa,MAFnC;AAGI,QAAA,QAAQ,EAAIF;AAHhB;AAAA;AAAA;AAAA;AAAA,cADA,EAQQF,YARR,aAQQA,YARR,uBAQQA,YAAY,CAAEK,GAAd,CAAmBC,KAAD,IAAW;AACjC,4BACI;AAAA,iCACA,QAAC,IAAD;AAAM,YAAA,EAAE,EAAI,aAAaA,KAAK,CAACC,EAA/B;AAAA,mCACI,QAAC,IAAD;AAAqB,cAAA,IAAI,EAAED,KAAK,CAACE,IAAjC;AAAuC,cAAA,GAAG,EAAEF,KAAK,CAACG,GAAlD;AAAuD,cAAA,MAAM,EAAGH,KAAK,CAACI;AAAtE,eAAWJ,KAAK,CAACC,EAAjB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,gBADJ;AAOH,OARO,CARR;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAuBH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;GAzFwBlB,I;UACHN,W,EACKC,W;;;KAFFK,I","sourcesContent":["import React from 'react';\nimport { useState, useEffect} from 'react';\nimport { useDispatch, useSelector} from 'react-redux';\nimport { searchGames } from '../../redux/actions';\nimport  Card  from '../Card/card';\nimport { Link } from 'react-router-dom';\nimport Paginado from '../Paginado/paginado'\n\nexport default function Home (){\n    const dispatch = useDispatch();\n    const allVideoGames = useSelector((state) => state.videoGames)\n\n    const [currentPage,setCurrentPage] = useState(1)\n    const [gamesPerPage, setGamesPerPage] = useState(15) \n    const indexOfLastGame = currentPage * gamesPerPage  //15\n    const indexOfFirstGame = indexOfLastGame - gamesPerPage\n    const currentGames = allVideoGames.slice(indexOfFirstGame,indexOfLastGame)\n    \n    const paginado = (pageNumber) =>{\n        setCurrentPage(pageNumber)\n    }\n    \n\n\n    useEffect(() => {\n        dispatch(searchGames())\n    }, [])\n\n    return(\n        <div>       \n            <div>\n            <Paginado \n                gamesPerPage = {gamesPerPage}\n                allVideoGames = {allVideoGames.length}\n                paginado = {paginado}\n\n            />\n                {\n                    currentGames?.map((games) => {\n                return(    \n                    <div>\n                    <Link to = {'app/home' + games.id}> \n                        <Card key={games.id} name={games.name} img={games.img} genres= {games.genres}/>\n                    </Link>\n                    </div>\n                )\n            })\n         }\n         </div>\n     </div>\n   )\n} \n\n/*export default function Home (){\n    const dispatch = useDispatch();\n    const allVideoGames = useSelector((state) => state.nameGame)\n\n    useEffect(() => {\n        dispatch(searchGames())\n    }, [])\n\n    function handleClick(evt){\n        evt.preventDefault();\n        dispatch(searchGames());\n    }\n\n    return(\n        <div>\n            <Link to = '/videogames'> Crear Videogame </Link>\n            <h1>VOS PODES PIPI</h1>\n            <button onClick={evt => handleClick(evt)}>Refresh</button>\n        \n            <div>\n                <select> \n                    <option value = 'order'>Ordenar</option>\n                    <option value = 'asc'>Ascendente</option>\n                    <option value = 'desc'>Descendente</option> //el value me sirve para hacer la logica\n                </select>\n\n                <select> \n                   <option value='all'>Todos</option>\n                   <option value='created'>Creados</option>\n                   <option value='api'>Existentes</option>\n                </select>\n\n                {\n                    allVideoGames?.map((games, index) => {\n                return(    \n                    <div>\n                        <Card key={index} name={games.name} img={games.img} genres= {games.genres}/>\n                    </div>\n                    )\n                })\n                }\n            </div>\n        </div>\n    )\n} */"]},"metadata":{},"sourceType":"module"}
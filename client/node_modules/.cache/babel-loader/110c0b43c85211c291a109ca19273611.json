{"ast":null,"code":"var _jsxFileName = \"/Users/ayelenalvarez/Desktop/PIVideoGames/client/src/components/Card/card.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { connect } from 'react-redux';\nimport { searchGames, gameById } from '../../redux/actions';\nimport s from './card.module.css';\nimport { NavLink } from 'react-router-dom';\nimport Paginado from '../Paginado/paginado';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Card({\n  searchGames,\n  videogames,\n  name,\n  gameById\n}) {\n  _s();\n\n  var _videogames;\n\n  const dispatch = useDispatch();\n  const allVideoGames = useSelector(state => state.videoGames);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [gamesPerPage, setGamesPerPage] = useState(15);\n  const indexOfLastGame = currentPage * gamesPerPage; //15\n\n  const indexOfFirstGame = indexOfLastGame - gamesPerPage;\n  videogames = allVideoGames.slice(indexOfFirstGame, indexOfLastGame);\n\n  const paginado = pageNumber => {\n    setCurrentPage(pageNumber);\n  };\n\n  useEffect(() => {\n    searchGames();\n  }, []);\n\n  function game() {\n    if (name.length > 0) return name;else return videogames;\n  }\n\n  console.log(videogames);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.cards,\n    children: [/*#__PURE__*/_jsxDEV(Paginado, {\n      gamesPerPage: gamesPerPage,\n      allVideoGames: allVideoGames.length,\n      paginado: paginado\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), // videogames.length ? videogames.map(e =>\n    (_videogames = videogames) === null || _videogames === void 0 ? void 0 : _videogames.map(e => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.card,\n      onClick: () => gameById(e.id),\n      children: /*#__PURE__*/_jsxDEV(NavLink, {\n        className: s.NavLink,\n        to: `/app/${e.id}`,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: s.title,\n          children: e.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          className: s.image,\n          src: e.img,\n          alt: \"Imagen de videogames\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: s.ctnGenresCard,\n          children: [\"Release: \", e.releaseDate]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: s.cardLow,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: s.ctnGenresCard,\n            children: [\" Genres: \", e.genres]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: s.ctnGenresCard,\n            children: [\" Rating: \", e.rating]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 18\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 33\n    }, this)) // ):<img src={loading} alt='Gif Cargando'/>\n    ]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Card, \"QRelAswHnE5I7ipgiTi+xj8M4og=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Card;\n\nconst mapStateToProps = store => {\n  return {\n    videogames: store.videoGames,\n    name: store.name\n  };\n};\n\nexport default connect(mapStateToProps, {\n  searchGames,\n  gameById\n})(Card);\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["/Users/ayelenalvarez/Desktop/PIVideoGames/client/src/components/Card/card.jsx"],"names":["React","useEffect","useState","useDispatch","useSelector","connect","searchGames","gameById","s","NavLink","Paginado","Card","videogames","name","dispatch","allVideoGames","state","videoGames","currentPage","setCurrentPage","gamesPerPage","setGamesPerPage","indexOfLastGame","indexOfFirstGame","slice","paginado","pageNumber","game","length","console","log","cards","map","e","card","id","title","image","img","ctnGenresCard","releaseDate","cardLow","genres","rating","mapStateToProps","store"],"mappings":"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","sourcesContent":["\n\nimport React, {useEffect,useState} from 'react';\nimport { useDispatch, useSelector} from 'react-redux';\nimport {connect} from 'react-redux'\nimport {searchGames,gameById} from '../../redux/actions';\nimport s from './card.module.css'\nimport {NavLink} from 'react-router-dom';\nimport Paginado from '../Paginado/paginado'\n\n\n\nfunction Card({searchGames, videogames, name, gameById}){\n    const dispatch = useDispatch();\n    const allVideoGames = useSelector((state) => state.videoGames)\n\n    const [currentPage,setCurrentPage] = useState(1)\n    const [gamesPerPage, setGamesPerPage] = useState(15) \n    const indexOfLastGame = currentPage * gamesPerPage  //15\n    const indexOfFirstGame = indexOfLastGame - gamesPerPage\n    videogames = allVideoGames.slice(indexOfFirstGame,indexOfLastGame)\n    \n    const paginado = (pageNumber) =>{\n        setCurrentPage(pageNumber)\n    }\n\n    useEffect(() => {\n        searchGames()\n    },[])\n\n    function game(){\n        if(name.length > 0) return name;\n        else return videogames\n    }\n    console.log(videogames) \n    \n    return(\n        <div className={s.cards}>\n            <Paginado \n                gamesPerPage = {gamesPerPage}\n                allVideoGames = {allVideoGames.length}\n                paginado = {paginado}\n\n            />\n            { \n\n                // videogames.length ? videogames.map(e =>\n            videogames?.map(e=> <div className={s.card} onClick={()=>gameById(e.id)}>\n               <NavLink className={s.NavLink} to={`/app/${e.id}`}>\n               <p className={s.title}>{e.name}</p>\n               <img className={s.image} src={e.img} alt='Imagen de videogames'/>\n               <p className={s.ctnGenresCard}>Release: {e.releaseDate}</p>  \n                 <div className={s.cardLow}>\n                    <p className={s.ctnGenresCard}> Genres: {e.genres}</p>   \n                    <p className={s.ctnGenresCard}> Rating: {e.rating}</p>\n                    </div></NavLink>\n               </div>)\n                // ):<img src={loading} alt='Gif Cargando'/>\n            } \n        </div>\n    )\n}\n\n\n\nconst mapStateToProps = (store) => {\n    return{\n        videogames: store.videoGames,\n        name: store.name,\n    }\n} \n\nexport default connect(mapStateToProps, {searchGames, gameById})(Card);"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/ayelenalvarez/Desktop/PIVideoGames/client/src/components/Card/card.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { searchGames, gameById } from '../../redux/actions';\nimport s from './card.module.css';\nimport { NavLink } from 'react-router-dom';\nimport Paginado from '../Paginado/paginado';\nimport loading from '../../assets/loading.gif';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Card({\n  searchGames,\n  videogames,\n  gameById\n}) {\n  _s();\n\n  ;\n  const allVideoGames = videogames;\n  const [currentPage, setCurrentPage] = useState(1);\n  const [gamesPerPage, setGamesPerPage] = useState(15);\n  const indexOfLastGame = currentPage * gamesPerPage; //15\n\n  const indexOfFirstGame = indexOfLastGame - gamesPerPage;\n  videogames = videogames.slice(indexOfFirstGame, indexOfLastGame);\n\n  const paginado = pageNumber => {\n    setCurrentPage(pageNumber);\n  };\n\n  useEffect(() => {\n    searchGames();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.cards,\n      children: videogames.length ? videogames.map((e, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.card,\n        onClick: () => gameById(e.id),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: s.container,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: s.image,\n              src: e.img,\n              alt: \"Imagen de videogames\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 16\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"s.cardDetails\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: s.cardReleased,\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: e.releaseDate\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 52\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: s.cardTitle,\n              children: e.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: s.cardDetails,\n              children: e.genres.map((e, i) => {\n                if (i < 3) return /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: s.span,\n                  children: e.name\n                }, i, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 46,\n                  columnNumber: 88\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: s.cardRating,\n              children: [\" Rating: \", e.rating]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n            className: s.NavLink,\n            to: `/app/${e.id}`,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                className: s.cardMore,\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Find out more\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 50,\n                  columnNumber: 52\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 26\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 16\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 55\n      }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.contLoading,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: loading,\n          alt: \"loading gif\",\n          className: s.loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 26\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paginado, {\n      gamesPerPage: gamesPerPage,\n      allVideoGames: allVideoGames.length,\n      paginado: paginado,\n      currentPage: currentPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Card, \"kX8x0LqbVbgFzXTpV6qe4i5kFGU=\");\n\n_c = Card;\n\nconst mapStateToProps = store => {\n  return {\n    videogames: store.videoGames,\n    name: store.name\n  };\n};\n\nexport default connect(mapStateToProps, {\n  searchGames,\n  gameById\n})(Card);\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["/Users/ayelenalvarez/Desktop/PIVideoGames/client/src/components/Card/card.jsx"],"names":["React","useEffect","useState","connect","searchGames","gameById","s","NavLink","Paginado","loading","Card","videogames","allVideoGames","currentPage","setCurrentPage","gamesPerPage","setGamesPerPage","indexOfLastGame","indexOfFirstGame","slice","paginado","pageNumber","cards","length","map","e","i","card","id","container","image","img","cardReleased","releaseDate","cardTitle","name","cardDetails","genres","span","cardRating","rating","cardMore","contLoading","mapStateToProps","store","videoGames"],"mappings":";;;AACA,OAAOA,KAAP,IAAeC,SAAf,EAAyBC,QAAzB,QAAwC,OAAxC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,WAAR,EAAoBC,QAApB,QAAmC,qBAAnC;AACA,OAAOC,CAAP,MAAc,mBAAd;AACA,SAAQC,OAAR,QAAsB,kBAAtB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,OAAP,MAAoB,0BAApB;;;AAIA,SAASC,IAAT,CAAc;AAACN,EAAAA,WAAD;AAAcO,EAAAA,UAAd;AAA0BN,EAAAA;AAA1B,CAAd,EAAkD;AAAA;;AAClD;AACI,QAAMO,aAAa,GAAGD,UAAtB;AAEA,QAAM,CAACE,WAAD,EAAaC,cAAb,IAA+BZ,QAAQ,CAAC,CAAD,CAA7C;AACA,QAAM,CAACa,YAAD,EAAeC,eAAf,IAAkCd,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAMe,eAAe,GAAGJ,WAAW,GAAGE,YAAtC,CAN8C,CAMM;;AACpD,QAAMG,gBAAgB,GAAGD,eAAe,GAAGF,YAA3C;AACAJ,EAAAA,UAAU,GAAGA,UAAU,CAACQ,KAAX,CAAiBD,gBAAjB,EAAkCD,eAAlC,CAAb;;AAEA,QAAMG,QAAQ,GAAIC,UAAD,IAAe;AAC5BP,IAAAA,cAAc,CAACO,UAAD,CAAd;AACH,GAFD;;AAIApB,EAAAA,SAAS,CAAC,MAAM;AACZG,IAAAA,WAAW;AACd,GAFQ,EAEP,EAFO,CAAT;AAKA,sBACI;AAAA,4BAEF;AAAK,MAAA,SAAS,EAAEE,CAAC,CAACgB,KAAlB;AAAA,gBAGMX,UAAU,CAACY,MAAX,GAAmBZ,UAAU,CAACa,GAAX,CAAe,CAACC,CAAD,EAAGC,CAAH,kBAAQ;AAAa,QAAA,SAAS,EAAEpB,CAAC,CAACqB,IAA1B;AAAgC,QAAA,OAAO,EAAE,MAAItB,QAAQ,CAACoB,CAAC,CAACG,EAAH,CAArD;AAAA,+BAEvC;AAAK,UAAA,SAAS,EAAEtB,CAAC,CAACuB,SAAlB;AAAA,kCACA;AAAA,mCACA;AAAK,cAAA,SAAS,EAAEvB,CAAC,CAACwB,KAAlB;AAAyB,cAAA,GAAG,EAAEL,CAAC,CAACM,GAAhC;AAAqC,cAAA,GAAG,EAAC;AAAzC;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,kBADA,eAIA;AAAK,YAAA,SAAS,EAAG,eAAjB;AAAA,oCACK;AAAG,cAAA,SAAS,EAAEzB,CAAC,CAAC0B,YAAhB;AAAA,2CAA+B;AAAA,0BAASP,CAAC,CAACQ;AAAX;AAAA;AAAA;AAAA;AAAA,sBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA,oBADL,eAEK;AAAG,cAAA,SAAS,EAAE3B,CAAC,CAAC4B,SAAhB;AAAA,wBAA4BT,CAAC,CAACU;AAA9B;AAAA;AAAA;AAAA;AAAA,oBAFL,eAGK;AAAG,cAAA,SAAS,EAAE7B,CAAC,CAAC8B,WAAhB;AAAA,wBAA8BX,CAAC,CAACY,MAAF,CAASb,GAAT,CAAa,CAACC,CAAD,EAAGC,CAAH,KAAO;AAAC,oBAAGA,CAAC,GAAG,CAAP,EAAS,oBAAO;AAAc,kBAAA,SAAS,EAAEpB,CAAC,CAACgC,IAA3B;AAAA,4BAAmCb,CAAC,CAACU;AAArC,mBAAWT,CAAX;AAAA;AAAA;AAAA;AAAA,wBAAP;AAAyD,eAAvF;AAA9B;AAAA;AAAA;AAAA;AAAA,oBAHL,eAIK;AAAG,cAAA,SAAS,EAAEpB,CAAC,CAACiC,UAAhB;AAAA,sCAAsCd,CAAC,CAACe,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJL;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJA,eAUK,QAAC,OAAD;AAAS,YAAA,SAAS,EAAElC,CAAC,CAACC,OAAtB;AAA+B,YAAA,EAAE,EAAG,QAAOkB,CAAC,CAACG,EAAG,EAAhD;AAAA,mCACA;AAAA,qCAAK;AAAG,gBAAA,SAAS,EAAEtB,CAAC,CAACmC,QAAhB;AAAA,uCAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA1B;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,kBAVL;AAAA;AAAA;AAAA;AAAA;AAAA;AAFuC,SAAUf,CAAV;AAAA;AAAA;AAAA;AAAA,cAAvB,CAAnB,gBAgBa;AAAK,QAAA,SAAS,EAAEpB,CAAC,CAACoC,WAAlB;AAAA,+BACT;AAAK,UAAA,GAAG,EAAEjC,OAAV;AAAmB,UAAA,GAAG,EAAC,aAAvB;AAAqC,UAAA,SAAS,EAAEH,CAAC,CAACG;AAAlD;AAAA;AAAA;AAAA;AAAA;AADS;AAAA;AAAA;AAAA;AAAA;AAnBnB;AAAA;AAAA;AAAA;AAAA,YAFE,eA4BA,QAAC,QAAD;AACQ,MAAA,YAAY,EAAIM,YADxB;AAEQ,MAAA,aAAa,EAAIH,aAAa,CAACW,MAFvC;AAGQ,MAAA,QAAQ,EAAIH,QAHpB;AAIQ,MAAA,WAAW,EAAEP;AAJrB;AAAA;AAAA;AAAA;AAAA,YA5BA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAuCH;;GA1DQH,I;;KAAAA,I;;AA8DT,MAAMiC,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAM;AACFjC,IAAAA,UAAU,EAAEiC,KAAK,CAACC,UADhB;AAEFV,IAAAA,IAAI,EAAES,KAAK,CAACT;AAFV,GAAN;AAIH,CALD;;AAOA,eAAehC,OAAO,CAACwC,eAAD,EAAkB;AAACvC,EAAAA,WAAD;AAAcC,EAAAA;AAAd,CAAlB,CAAP,CAAkDK,IAAlD,CAAf","sourcesContent":["\nimport React, {useEffect,useState} from 'react';\nimport {connect} from 'react-redux'\nimport {searchGames,gameById} from '../../redux/actions';\nimport s from './card.module.css'\nimport {NavLink} from 'react-router-dom';\nimport Paginado from '../Paginado/paginado'\nimport loading from '../../assets/loading.gif'\n\n\n\nfunction Card({searchGames, videogames, gameById}){\n;\n    const allVideoGames = videogames\n\n    const [currentPage,setCurrentPage] = useState(1)\n    const [gamesPerPage, setGamesPerPage] = useState(15) \n    const indexOfLastGame = currentPage * gamesPerPage  //15\n    const indexOfFirstGame = indexOfLastGame - gamesPerPage\n    videogames = videogames.slice(indexOfFirstGame,indexOfLastGame)\n    \n    const paginado = (pageNumber) =>{\n        setCurrentPage(pageNumber)\n    }\n\n    useEffect(() => {\n        searchGames()\n    },[])\n\n\n    return(\n        <div>\n\n      <div className={s.cards}>\n\n            { \n            videogames.length? videogames.map((e,i)=> <div key={i} className={s.card} onClick={()=>gameById(e.id)}>\n                \n               <div className={s.container}>  \n               <div >\n               <img className={s.image} src={e.img} alt='Imagen de videogames'/>\n               </div>    \n               <div className = \"s.cardDetails\">\n                    <p className={s.cardReleased}> <strong>{e.releaseDate}</strong></p>  \n                    <p className={s.cardTitle}>{e.name}</p>\n                    <p className={s.cardDetails}>{e.genres.map((e,i)=>{if(i < 3)return <span key={i} className={s.span} >{e.name}</span>})}</p>   \n                    <p className={s.cardRating}> Rating: {e.rating}</p>\n                    </div>\n                    <NavLink className={s.NavLink} to={`/app/${e.id}`}> \n                    <div><p className={s.cardMore}><strong>Find out more</strong></p></div>\n                    </NavLink>\n                    </div>    \n               </div>) : <div className={s.contLoading}>\n                <img src={loading} alt='loading gif' className={s.loading}/>\n                </div>\n\n            } \n\n        </div>\n        <Paginado \n                gamesPerPage = {gamesPerPage}\n                allVideoGames = {allVideoGames.length}\n                paginado = {paginado}\n                currentPage={currentPage}\n\n            />\n        </div>\n  \n    )\n}\n\n\n\nconst mapStateToProps = (store) => {\n    return{\n        videogames: store.videoGames,\n        name: store.name,\n    }\n} \n\nexport default connect(mapStateToProps, {searchGames, gameById})(Card);"]},"metadata":{},"sourceType":"module"}
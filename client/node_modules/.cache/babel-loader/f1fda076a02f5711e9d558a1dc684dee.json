{"ast":null,"code":"var _jsxFileName = \"/Users/ayelenalvarez/Desktop/PIVideoGames/client/src/components/Card/card.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { connect } from 'react-redux';\nimport { searchGames, gameById } from '../../redux/actions';\nimport s from './card.module.css';\nimport { NavLink } from 'react-router-dom';\nimport Paginado from '../Paginado/paginado';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Card({\n  searchGames,\n  videogames,\n  name,\n  gameById\n}) {\n  _s();\n\n  const dispatch = useDispatch(); // const allVideoGames = useSelector((state) => state.videoGames)\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const [gamesPerPage, setGamesPerPage] = useState(15);\n  const indexOfLastGame = currentPage * gamesPerPage; //15\n\n  const indexOfFirstGame = indexOfLastGame - gamesPerPage;\n  videogames = videogames.slice(indexOfFirstGame, indexOfLastGame);\n\n  const paginado = pageNumber => {\n    setCurrentPage(pageNumber);\n  };\n\n  useEffect(() => {\n    searchGames();\n    console.log(videogames);\n  }, []); // function game(){\n  //     if(name.length > 0) return name;\n  //     else return videogames\n  // }\n  // console.log(videogames)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.cards,\n      children: // videogames.length ? videogames.map(e =>\n      videogames.map(e => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.card,\n        onClick: () => gameById(e.id),\n        children: /*#__PURE__*/_jsxDEV(NavLink, {\n          className: s.NavLink,\n          to: `/app/${e.id}`,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: s.title,\n            children: e.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            className: s.image,\n            src: e.img,\n            alt: \"Imagen de videogames\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: s.ctnGenresCard,\n            children: [\"Release: \", e.releaseDate]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: s.cardLow,\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: s.ctnGenresCard,\n              children: [\" Genres: \", e.genres.map(e => /*#__PURE__*/_jsxDEV(\"span\", {\n                className: s.span,\n                children: e.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 78\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: s.ctnGenresCard,\n              children: [\" Rating: \", e.rating]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 18\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 32\n      }, this)) // ):<img src={loading} alt='Gif Cargando'/>\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paginado, {\n      gamesPerPage: gamesPerPage,\n      videogames: videogames.length,\n      paginado: paginado\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Card, \"0ymf/8+Hmq2OA+H2f0CuiDRsPHw=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Card;\n\nconst mapStateToProps = store => {\n  return {\n    videogames: store.videoGames,\n    name: store.name\n  };\n};\n\nexport default connect(mapStateToProps, {\n  searchGames,\n  gameById\n})(Card);\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["/Users/ayelenalvarez/Desktop/PIVideoGames/client/src/components/Card/card.jsx"],"names":["React","useEffect","useState","useDispatch","useSelector","connect","searchGames","gameById","s","NavLink","Paginado","Card","videogames","name","dispatch","currentPage","setCurrentPage","gamesPerPage","setGamesPerPage","indexOfLastGame","indexOfFirstGame","slice","paginado","pageNumber","console","log","cards","map","e","card","id","title","image","img","ctnGenresCard","releaseDate","cardLow","genres","span","rating","length","mapStateToProps","store","videoGames"],"mappings":"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","sourcesContent":["\n\nimport React, {useEffect,useState} from 'react';\nimport { useDispatch, useSelector} from 'react-redux';\nimport {connect} from 'react-redux'\nimport {searchGames,gameById} from '../../redux/actions';\nimport s from './card.module.css'\nimport {NavLink} from 'react-router-dom';\nimport Paginado from '../Paginado/paginado'\n\n\n\nfunction Card({searchGames, videogames, name, gameById}){\n    const dispatch = useDispatch();\n    // const allVideoGames = useSelector((state) => state.videoGames)\n\n    const [currentPage,setCurrentPage] = useState(1)\n    const [gamesPerPage, setGamesPerPage] = useState(15) \n    const indexOfLastGame = currentPage * gamesPerPage  //15\n    const indexOfFirstGame = indexOfLastGame - gamesPerPage\n    videogames = videogames.slice(indexOfFirstGame,indexOfLastGame)\n    \n    const paginado = (pageNumber) =>{\n        setCurrentPage(pageNumber)\n    }\n\n    useEffect(() => {\n        searchGames()\n        console.log(videogames)\n    },[])\n\n    // function game(){\n    //     if(name.length > 0) return name;\n    //     else return videogames\n    // }\n\n    // console.log(videogames)\n    \n    return(\n        <div>\n\n      <div className={s.cards}>\n\n            { \n\n                // videogames.length ? videogames.map(e =>\n            \n            videogames.map(e=> <div className={s.card} onClick={()=>gameById(e.id)}>\n               <NavLink className={s.NavLink} to={`/app/${e.id}`}>\n               <p className={s.title}>{e.name}</p>\n               <img className={s.image} src={e.img} alt='Imagen de videogames'/>\n               <p className={s.ctnGenresCard}>Release: {e.releaseDate}</p>  \n                 <div className={s.cardLow}>\n                    <p className={s.ctnGenresCard}> Genres: {e.genres.map(e=><span className={s.span}>{e.name}</span>)}</p>   \n                    <p className={s.ctnGenresCard}> Rating: {e.rating}</p>\n                    </div></NavLink>\n               </div>) \n                // ):<img src={loading} alt='Gif Cargando'/>\n            } \n\n        </div>\n        <Paginado \n                gamesPerPage = {gamesPerPage}\n                videogames = {videogames.length}\n                paginado = {paginado}\n\n            />\n        </div>\n  \n    )\n}\n\n\n\nconst mapStateToProps = (store) => {\n    return{\n        videogames: store.videoGames,\n        name: store.name,\n    }\n} \n\nexport default connect(mapStateToProps, {searchGames, gameById})(Card);"]},"metadata":{},"sourceType":"module"}